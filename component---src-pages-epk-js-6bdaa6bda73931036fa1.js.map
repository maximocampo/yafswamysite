{"version":3,"sources":["webpack:///./src/pages/epk.js"],"names":["EPK","useState","text","setText","t","useContext","TransCtx","width","useWindowSize","useEffect","a","firebase","firestore","collection","doc","lang","get","thing","data","style","left","position","height","backgroundSize","backgroundPositionY","display","flexDirection","alignItems","overflow","backgroundColor","margin","padding","onClick","window","location","assign","textDecoration","cursor","hover","noblack","Object","keys","sort","map","key","includes","src","split","alt","textAlign","toUpperCase","console","log","dangerouslySetInnerHTML","toString","marginTop","epk","bio","href"],"mappings":"wNA8IeA,UAxIH,WAAO,IAAD,EACUC,mBAAS,IAA1BC,EADO,KACDC,EADC,KAEPC,EAAKC,qBAAWC,KAAhBF,EACAG,EAASC,cAATD,MAUT,OAREE,qBAAU,WACN,sBAAC,4BAAAC,EAAA,sEACwBC,IAASC,YAAYC,WAAW,OAAOC,IAAIV,EAAEW,MAAMC,MAD3E,OACSC,EADT,OACkFC,OAE/Ef,EAAQc,GAHX,0CAAD,KAKD,CAACb,EAAEW,OAGN,oCACI,yBACII,MAAO,CACHC,KAAM,EACNC,SAAU,QACVd,MAAO,QACPe,OAAQ,QACRC,eAAgB,QAChBC,oBAAqB,UAE/B,yBACEL,MAAO,CACLC,KAAM,EACNC,SAAU,QACVd,MAAO,QACPe,OAAQ,QACRG,QAAQ,OACRC,cAAe,SACfC,WAAY,SACZC,SAAU,SAGZ,yBACET,MAAO,CACHU,gBAAiB,QACnBJ,QAAQ,OACRC,cAAe,SACfC,WAAY,SACZpB,MAAOA,EAAQ,IAAM,IAAM,OAC3BuB,OAAQ,QACNC,QAAS,OAGb,kBAAC,IAAD,CAAMZ,MAAO,CAACU,gBAAiB,SAA/B,OACA,6BACA,kBAAC,IAAD,CACEG,QAAS,kBAAMC,OAAOC,SAASC,OAAhB,IAA2B/B,EAAEW,KAA7B,YACfI,MAAO,CAACiB,eAAgB,YAAaC,OAAQ,WAC7CC,MAAO,UACPC,SAAO,GAJT,SAOCC,OAAOC,KAAKvC,GAAMwC,OAAOC,KAAI,SAAAC,GAE1B,OAAI1C,EAAK0C,GAAKC,SAAS,SACZ,yBAAKC,IAAK5C,EAAK0C,GAAKG,MAAM,MAAM,GAAIC,IAAI,KAG/C9C,EAAK0C,GAAKC,SAAS,OAEf,oCACI,kBAAC,IAAD,CACIN,SAAO,EACPP,QAAS,kBAAMC,OAAOC,SAASC,OAAOjC,EAAK0C,GAAKG,MAAM,MAAM,KAC5D5B,MAAO,CAAC8B,UAAW,UAAWZ,OAAQ,YAE7B,OAARO,EAAe1C,EAAK0C,GAAKG,MAAM,MAAM,GAAGG,cAAgBhD,EAAK0C,GAAKG,MAAM,MAAM,IAEnF,6BACA,+BAKZI,QAAQC,IAAY,OAARR,EAAe1C,EAAK0C,GAAKM,cAAgBhD,EAAK0C,IAGlD,oCACI,kBAAC,IAAD,CAAMzB,MAAO,CAAC8B,UAAW,WAAYI,yBAAuB,IAC9C,OAART,EAAe1C,EAAK0C,GAAKM,cAAgBhD,EAAK0C,IAAMU,YAE1D,6BACA,kCAId,kBAAC,IAAD,CAAMnC,MAAO,CAAEoC,UAAW,KACzBnD,EAAEoD,IAAIC,IAAI,IAEb,6BACA,6BACA,kBAAC,IAAD,CAAMnB,MAAO,UAAWnB,MAAO,CAAC8B,UAAW,YACzC,uBAAGS,KAAK,6BAA6BtD,EAAEoD,IAAIC,IAAI,IAC/C,sCAEF,6BACA,6BACA,kBAAC,IAAD,CACEzB,QAAS,kBAAMC,OAAOC,SAASC,OAAO,wCACtChB,MAAO,CAACiB,eAAgB,YAAaC,OAAQ,WAC7CC,MAAO,WAENlC,EAAEoD,IAAIC,IAAI,IAEb,6BACA,6BACA,kBAAC,IAAD,CACEzB,QAAS,kBAAMC,OAAOC,SAASC,OAAO,uCACtChB,MAAO,CAACiB,eAAgB,YAAaC,OAAQ,WAC7CC,MAAO,WAENlC,EAAEoD,IAAIC,IAAI","file":"component---src-pages-epk-js-6bdaa6bda73931036fa1.js","sourcesContent":["import React, {useContext, useEffect, useState} from 'react';\nimport Text from \"../components/Text\";\nimport {useWindowSize} from \"../hooks/useWindowSize\";\nimport firebase from \"gatsby-plugin-firebase\"\nimport {TransCtx} from \"../hooks/useTrans\";\n\nconst EPK = () => {\n    const [text, setText] = useState([])\n    const {t} = useContext(TransCtx);\n    const {width} = useWindowSize();\n    \n    useEffect(() => {\n        (async () => {\n            const thing = (await firebase.firestore().collection('epk').doc(t.lang).get()).data()\n            \n            setText(thing)\n        })()\n    }, [t.lang])\n  \n  return (\n    <>\n        <div\n            style={{\n                left: 0,\n                position: 'fixed',\n                width: '100vw',\n                height: '100vh',\n                backgroundSize: 'cover',\n                backgroundPositionY: '100%'\n            }}/>\n      <div\n        style={{\n          left: 0,\n          position: 'fixed',\n          width: '100vw',\n          height: '100vh',\n          display:'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          overflow: 'auto',\n        }}\n      >\n        <div\n          style={{\n              backgroundColor: 'black',\n            display:'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            width: width > 840 ? 450 : '100%',\n            margin: '1% 5%',\n              padding: '1%'\n          }}\n        >\n          <Text style={{backgroundColor: 'none'}}>EPK</Text>\n          <br/>\n          <Text\n            onClick={() => window.location.assign(`/${t.lang}epk.pdf`)}\n            style={{textDecoration: 'underline', cursor: 'pointer'}}\n            hover={'#ff00ae'}\n            noblack\n          >(PDF)\n          </Text>\n          {Object.keys(text).sort().map(key => {\n              \n              if (text[key].includes('img::')) {\n                  return <img src={text[key].split('::')[1]} alt=\"\"/>\n              }\n              \n              if (text[key].includes('a::')) {\n                  return (\n                      <>\n                          <Text\n                              noblack\n                              onClick={() => window.location.assign(text[key].split('::')[1])}\n                              style={{textAlign: 'justify', cursor: 'pointer'}}\n                          >\n                              {key === 'p1' ? text[key].split('::')[3].toUpperCase() : text[key].split('::')[2]}\n                          </Text>\n                          <br/>\n                          <br/>\n                      </>\n                  )\n              }\n              \n              console.log(key === 'p1' ? text[key].toUpperCase() : text[key])\n              \n              return (\n                      <>\n                          <Text style={{textAlign: 'justify'}} dangerouslySetInnerHTML>\n                              {(key === 'p1' ? text[key].toUpperCase() : text[key]).toString()}\n                          </Text>\n                          <br/>\n                          <br/>\n                      </>\n                  )\n          })}\n            <Text style={{ marginTop: 30}}>\n            {t.epk.bio[3]}\n          </Text>\n          <br/>\n          <br/>\n          <Text hover={'#ff00ae'} style={{textAlign: 'justify'}}>\n            <a href=\"mailto:yafswamy@gmail.com\">{t.epk.bio[4]}</a>\n            <></>\n          </Text>\n          <br/>\n          <br/>\n          <Text\n            onClick={() => window.location.assign('https://www.instagram.com/yafswamy/')}\n            style={{textDecoration: 'underline', cursor: 'pointer'}}\n            hover={'#ff00ae'}\n          >\n            {t.epk.bio[5]}\n          </Text>\n          <br/>\n          <br/>\n          <Text\n            onClick={() => window.location.assign('https://www.facebook.com/yafswamy/')}\n            style={{textDecoration: 'underline', cursor: 'pointer'}}\n            hover={'#ff00ae'}\n          >\n            {t.epk.bio[6]}\n          </Text>\n        </div>\n      </div>\n        {/*<Draggable>\n            <div\n                style={{\n                    position: 'absolute', top:0 , left: 0,\n                    height: width > 840 ? 170 * 1.5 : 170 / 2,\n                    width: width > 840 ? 248 * 1.5 : 248 / 2,\n                    cursor: 'grab',\n                    backgroundRepeat: 'no-repeat',\n                    backgroundSize: 'contain',\n                    backgroundImage: 'url(https://firebasestorage.googleapis.com/v0/b/yafswamy-mainsite.appspot.com/o/logosnakesong.png?alt=media&token=7515391e-30c2-4a4e-be90-14cbecccd269)'\n                }}\n            />\n        </Draggable>*/}\n    </>\n  );\n};\n\nexport default EPK;\n"],"sourceRoot":""}